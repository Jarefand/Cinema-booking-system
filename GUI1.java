/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.projekt_kino;

import java.awt.Component;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author Lenovo
 */
public class GUI1 extends javax.swing.JFrame {
    Projekt_kino kino;
    private EkranLogowania log;
    private Lista_Filmow filmList;
    private EkranDodawanieSeansu dodajSeans;
    private Sala1rezerwacja sala1;
    private boolean logStatus;

    /**
     * Creates new form GUI1
     */
    
    public GUI1() throws IOException{
        initComponents();
        kino = new Projekt_kino();
        log = new EkranLogowania(this);
        filmList = new Lista_Filmow(this);
        sala1 = new Sala1rezerwacja(this);
        dodajSeans = new EkranDodawanieSeansu(this);
        logStatus = false;
        
        addSortListToJTable(0, true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButtonZaloguj = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButAddShow = new javax.swing.JButton();
        jButDeleteShow = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButFilmList = new javax.swing.JButton();
        jLoginMessage = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jCheckBox1 = new javax.swing.JCheckBox();
        jButtonSort = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Tytuł filmu", "Gatunek", "Rok", "Czas trwania", "Data", "Sala", "Cena"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jTable1AncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane2.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(40);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(40);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(6).setResizable(false);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(40);
            jTable1.getColumnModel().getColumn(7).setResizable(false);
            jTable1.getColumnModel().getColumn(7).setPreferredWidth(40);
        }
        //Wyjustowanie na środku danych na środku komórek tabeli
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        for(int i=0; i < 8; i++){
            jTable1.getColumnModel().getColumn(i).setCellRenderer( centerRenderer );
        }

        jButtonZaloguj.setText("Zaloguj");
        jButtonZaloguj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonZalogujActionPerformed(evt);
            }
        });

        jLabel1.setText("Wybierz seans");

        jButAddShow.setText("Dodaj seans");
        jButAddShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButAddShowActionPerformed(evt);
            }
        });

        jButDeleteShow.setText("Usuń seans");
        jButDeleteShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButDeleteShowActionPerformed(evt);
            }
        });

        jButton6.setText("Rezerwuj");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButFilmList.setText("Spis Filmow");
        jButFilmList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButFilmListActionPerformed(evt);
            }
        });

        jLoginMessage.setText("Zalogowano, user");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID", "Tytuł filmu", "Gatunek", "Rok", "Czas trwania", "Data", "Sala", "Cena" }));

        jCheckBox1.setText("Odwrotnie");

        jButtonSort.setText("Sortuj");
        jButtonSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSortActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 661, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                    .addComponent(jButDeleteShow, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButAddShow, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButFilmList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLoginMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonZaloguj, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(12, 12, 12))
            .addGroup(layout.createSequentialGroup()
                .addGap(169, 169, 169)
                .addComponent(jButtonSort, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(jCheckBox1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLoginMessage)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonZaloguj)
                        .addGap(135, 135, 135)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton6)
                        .addGap(18, 18, 18)
                        .addComponent(jButDeleteShow)
                        .addGap(18, 18, 18)
                        .addComponent(jButAddShow)
                        .addGap(18, 18, 18)
                        .addComponent(jButFilmList)))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSort)
                    .addComponent(jCheckBox1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jButAddShow.setVisible(false);
        jButDeleteShow.setVisible(false);
        jButFilmList.setVisible(false);
        jLoginMessage.setVisible(false);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jTable1AncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1AncestorAdded

    private void jButtonZalogujActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonZalogujActionPerformed
        if(logStatus){  
            jLoginMessage.setVisible(false);
            jButAddShow.setVisible(false);
            jButDeleteShow.setVisible(false);
            jButFilmList.setVisible(false);
            jButtonZaloguj.setText("Zaloguj");
            logStatus = false;
        }
        else{
            this.setVisible(false);
            log.setVisible(true);
        }
    }//GEN-LAST:event_jButtonZalogujActionPerformed

    private void jButFilmListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButFilmListActionPerformed
        this.setVisible(false);
        filmList.activate();
    }//GEN-LAST:event_jButFilmListActionPerformed

    private void jButDeleteShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButDeleteShowActionPerformed
        try
        {
            //Sprawdzany warunek
            checkSelectedRow(jTable1.getSelectedRow(), jTable1.getRowCount());
            
            //kod obslugi usuwania
            int id =  (int) jTable1.getValueAt(jTable1.getSelectedRow(), 0);
            int response = JOptionPane.showConfirmDialog(this, "Czy na pewno chcesz usunąć seans?", "Potwierdź", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if(response == JOptionPane.YES_OPTION){
                try {
                if(kino.usunSeans(id)){
                    JOptionPane.showMessageDialog(this, "Seans został usunięty");
                    addSortListToJTable(0, true);
                }
                } 
                catch (FileNotFoundException ex) {
                Logger.getLogger(GUI1.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Usunięcie nie powiodło się");
                }
            }
        }   
        catch(Exception e){
            JOptionPane.showMessageDialog(jScrollPane2, "Wybierz jeden seans z tabeli!", "Warning",
        JOptionPane.WARNING_MESSAGE);   
        }
        
    }//GEN-LAST:event_jButDeleteShowActionPerformed

    private void jButAddShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButAddShowActionPerformed
            dodajSeans.activate();
            this.setVisible(false);
    }//GEN-LAST:event_jButAddShowActionPerformed

    private void jButtonSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSortActionPerformed
        boolean con =! jCheckBox1.isSelected();
        
        this.addSortListToJTable(jComboBox1.getSelectedIndex(), con);
    }//GEN-LAST:event_jButtonSortActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed

        try{
            //Sprawdzany warunek
            checkSelectedRow(jTable1.getSelectedRow(), jTable1.getRowCount());
            int id =  (int) jTable1.getValueAt(jTable1.getSelectedRow(), 0);
            
            //Kod przechodzenia do innego okna
            System.out.println("List:"+ this.kino.mapa_seansow.get(id).get_seatList());
            this.sala1.activate(this.kino.mapa_seansow.get(id).get_seatList(), this.kino.mapa_seansow.get(id).get_sala(), this.kino.mapa_seansow.get(id).getID());
            this.setVisible(false);
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(jScrollPane2, "Wybierz jeden seans z tabeli!", "Warning",
        JOptionPane.WARNING_MESSAGE);   
        }
    }//GEN-LAST:event_jButton6ActionPerformed
    
    // Funkcja zaloguj zmienia widoczność przycisków po zalogowaniu
    public void zaloguj(String user){
        logStatus = true;
        jLoginMessage.setText("Zalogowano, " + user);
        jButtonZaloguj.setText("Wyloguj");
        jLoginMessage.setVisible(true);
        jButAddShow.setVisible(true);
        jButDeleteShow.setVisible(true);
        jButFilmList.setVisible(true);
    }
       

    //Aktualizacja tabeli posortowanej
    public void addSortListToJTable(int swit, boolean con)
    {
        //posortowanie LinkedHashMap według kryteriow
        this.kino.sort_seans(swit, con);
        
        //Stworzenie modelu tabeli i określenie jej ilości kolumn
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        Object rowData[] = new Object[8];
        
        //czyszczenie tablicy
        model.getDataVector().removeAllElements();;
        
        //Ustawienie iteratora do HashMapy
        Set<Map.Entry<Integer, Seans>> entries = this.kino.sort_mapa_seansow.entrySet();
        Iterator<Map.Entry<Integer, Seans>> seansyIterator = entries.iterator();
       
        //Odczyt kolejnych danych z LinkedHashMapy i umieszczenie ich w wierszach tabeli
        while(seansyIterator.hasNext()) {
            Map.Entry<Integer, Seans> entry = seansyIterator.next();
            rowData[0] = entry.getKey();
            rowData[1] = this.kino.mapa_filmow.get(entry.getValue().get_filmID()).getName();
            rowData[2] = this.kino.mapa_filmow.get(entry.getValue().get_filmID()).getGenre();
            rowData[3] = this.kino.mapa_filmow.get(entry.getValue().get_filmID()).getAge();
            rowData[4] = this.kino.mapa_filmow.get(entry.getValue().get_filmID()).getTime();
            rowData[5] = entry.getValue().get_data_pom();
            rowData[6] = entry.getValue().get_sala();
            rowData[7] = entry.getValue().get_cena();
         
            model.addRow(rowData);
       }
    }
    
    
    public void activate(){
        
        addSortListToJTable(0, true);
        
        this.setVisible(true);
    }
    
    private static void checkSelectedRow(int selectedRow, int tableLength) throws MyException{
        if(selectedRow < 0 || selectedRow > tableLength){
            throw new MyException("\n" + "Musisz wybrać jeden seans z tablicy");
        }
        
    }

  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButAddShow;
    private javax.swing.JButton jButDeleteShow;
    private javax.swing.JButton jButFilmList;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButtonSort;
    private javax.swing.JButton jButtonZaloguj;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLoginMessage;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}

